enabledRBAC: true

## Tolerations for use with node taints
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
  #  - key: "key"
  #    operator: "Equal"
  #    value: "value"
  #    effect: "NoSchedule"

logLevel: 2
replicas: 1

## Default liveness probe
##
defaultLivenessProbe:
  initialDelaySeconds: 60
  failureThreshold: 6
  httpGet:
    path: /healthz
    port: https
    scheme: HTTPS
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 10

## Default readiness probe
##
defaultReadinessProbe:
  initialDelaySeconds: 30
  failureThreshold: 10
  httpGet:
    path: /healthz
    port: https
    scheme: HTTPS
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 10

## Default rules
##
defaultRules:
  previousConfigMapName: ""
  customs:
  # this rule matches cumulative cAdvisor metrics
  - seriesQuery: '{__name__=~"^container_.*",namespace!="",pod_name!="",container_name!="POD"}'
    # skip specifying generic resource<->label mappings, and just
    # attach only pod and namespace resources by mapping label names to group-resources
    resources:
      overrides:
        namespace:
          resource: namespace
        pod_name:
          resource: pod
    # change name
    name:
      matches: ^container_(.*)_total$
      as: "container_$1"
    metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}[5m])) by (<<.GroupBy>>)
  # this rule matches cAdvisor metrics that aren't cumulative
  - seriesQuery: '{__name__=~"^container_.*",namespace!="",pod_name!="",container_name!="POD"}'
    seriesFilters:
    - isNot: .*_total$
    - isNot: .*_depth$
    - isNot: .*_bucket$
    - isNot: .*_sum$
    - isNot: .*_summary$
    - isNot: .*_seconds_count$
    resources:
      overrides:
        namespace:
          resource: namespace
        pod_name:
          resource: pod
    metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,container_name!="POD"}) by (<<.GroupBy>>)
  # this rule matches non-cAdvisor metrics
  - seriesQuery: '{__name__!~"(^(container_|nginx_ingress_|go_gc_|scrape_).*|up)",namespace!="",job!~"(^expose-.*-metrics$|kubernetes)"}'
    resources:
      overrides:
        namespace:
          resource: namespace
        pod:
          resource: pod
    name:
      matches: ^(.*)_total$
      as: "$1"
    metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>)
  # this rule matches non-cAdvisor metrics that aren't cumulative
  - seriesQuery: '{__name__!~"(^(container_|nginx_ingress_|go_gc_|scrape_).*|up)",namespace!="",job!~"(^expose-.*-metrics$|kubernetes)"}'
    seriesFilters:
    - isNot: .*_total$
    - isNot: .*_depth$
    - isNot: .*_bucket$
    - isNot: .*_sum$
    - isNot: .*_summary$
    - isNot: .*_seconds_count$
    resources:
      overrides:
        namespace:
          resource: namespace
        pod:
          resource: pod
    metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)

  externals: []
# - seriesQuery: '{__name__=~"^some_metric_count$"}'
#   resources:
#     template: <<.Resource>>
#   name:
#     matches: ""
#     as: "my_external_metric"
#   metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
  resources: {}
#   cpu:
#     containerQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>}[3m])) by (<<.GroupBy>>)
#     nodeQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>, id='/'}[3m])) by (<<.GroupBy>>)
#     resources:
#       overrides:
#         instance:
#           resource: node
#         namespace:
#           resource: namespace
#         pod_name:
#           resource: pod
#     containerLabel: container_name
#   memory:
#     containerQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>}) by (<<.GroupBy>>)
#     nodeQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>,id='/'}) by (<<.GroupBy>>)
#     resources:
#       overrides:
#         instance:
#           resource: node
#         namespace:
#           resource: namespace
#         pod_name:
#           resource: pod
#     containerLabel: container_name
#   window: 3m
